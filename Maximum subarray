Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

Brute : O(n3)
run 3 nesetd loop 
and add sum+= a[k];

---------------------------------------------
Better Approach :
run 2 loop
i=0 to n 
j=i to n
sum+=a[j];
-------------------------------
Optimal APProach : KADANE'S algo 
 int sum=0, maxSum=INT_MIN;
        int n= nums.size();
        for(int i=0;i<n;i++){
            sum+=nums[i];
            maxSum= max(maxSum, sum);

            if(sum<0) sum=0;
        }
        return maxSum;
