Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

Example - 2 3 3 5 1 9 k = 8 O/p :3 
Code : O(n3)
int len =0;
        int n= nums.size();
        for(int i=0; i<n;i++){
            int sum = nums[i];
            for(int j=i;j<n;j++){
                 long long sum = 0;
                 for(int k=i; k<=j;k++){
                    sum+=nums[k];
                 }
                 if (sum == k)
                len = max(len, j - i + 1);
            }
        }
        return len;
--------------------------------------------------------------------------- 
Better Approach :O(n2)

int len =0;
        int n= nums.size();
        
        for(int i=0; i<n;i++){
          long long sum = 0;
            for(int j=i;j<n;j++){
                sum+=nums[j];
                 if (sum == k)
                len = max(len, j - i + 1);
            }
        }
        return len;
---------------------------------------------------------------------------------

