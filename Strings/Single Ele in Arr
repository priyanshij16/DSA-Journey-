540 

Brute Force Approach : O(n)

    int singleNonDuplicate(vector<int>& nums) {
        int n= nums.size();
        if(n==1) return nums[0];

        for(int i=0;i<n;i++){
            if(i==0){
                if(nums[i]!= nums[i+1])
                return nums[i];
            } else {
            if (nums[i] != nums[i - 1] && nums[i] != nums[i + 1])
                return nums[i];
        }
        }
        return -1;
    }

-----------------------------------------------------
BETTER approach :
 int left =0, right= nums.size()-1;
     while(left<right){
        int mid=(left+right)/2;
// 1 2 2 3 4 4 5 5  so mid = 3   mid= 2+ 7= 4 
        if(mid%2==1){ mid--;} // mid= 2
        if(nums[mid] != nums[mid+1]){
            right=mid;
        }else{
            left=mid+2; // l= 2  
        }
     }
     return nums[left];   
