pRODUCT ARRAY EXCEPT SELF:
EX :Input: nums = [1,2,3,4]
Output: [24,12,8,6]

Tc: O(n2) spae :O(n)

    vector<int> productExceptSelf(vector<int>& nums) {
        int  n=nums.size();
        vector<int> ans(n,1);
        for(int i=0; i<n; i++){
            int result =1;
            for(int j=0;j<n;j++){
                if(i!=j){
                    result*=nums[j];
                }
            }
            ans[i]=result;
        }
        return ans;
    }


--------------------------------------------------------------------------
Better approach :

class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n= nums.size();
         int prefix[n];
    prefix[0]=1; // since first element can have no prefix
    for(int i=1;i<n;i++)
    {
        prefix[i]=prefix[i-1]*nums[i-1];
    }
    int suffix[n];
    suffix[n-1]=1; 
    for(int i=n-2;i>=0;i--)
    {
        suffix[i]=suffix[i+1]*nums[i+1];
    }
    vector<int>product(n,1);
    for(int i=0;i<n;i++)
    {
        product[i]=prefix[i]*suffix[i];
    }
    return product;
    }
};

